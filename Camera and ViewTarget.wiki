





* set camera to player controller
{{{class="brush: c++"
// get player controller:
#include "Kismet/GameplayStatics.h"
APlayerController* ourPlayerController = UGameplayStatics::GetPlayerController(this, 0);

// get playerController's view target
AActor* viewTarget = ourPlayerController->GetViewTarget();

// set view target to playerController
AActor* camera;
ourPlayerController->SetViewTarget(camera);

// set view target to playerController with blend
const float smoothBlendTime = 2.0f;
ourPlayerController->SetViewTargetWithBlend(camera, smmothBlendTime);
}}}


* set camera component with spring arm
{{{class="brush: c++"
// spring arm
USpringArmComponent* springArm = CreateDefaultSubobject<USpringArmComponent>(TEXT("CameraAttachmentArm"));
springArm->SetupAttachment(RootComponent);
springArm->RelativeRotation = FRotator(-45, 0, 0);
springArm->TargetArmLength = 400;
springArm->bEnableCameraLag = true;
springArm->CameraLagSpeed = 3;

// camera
UCameraComponent* camera = CreateDefaultSubobject<UCameraComponent>(TEXT("ActualCamera"));
camera->SetupAttachment(springArm, USpringArmComponent::SocketName)
}}}
